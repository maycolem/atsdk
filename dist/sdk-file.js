!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports["name-of-the-main-class"]=t():e["name-of-the-main-class"]=t()}(self,(()=>(()=>{"use strict";var e={921:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.events=void 0,t.events={loginModalOpen:"loginModalOpen",loginSuccess:"loginSuccess",recargaModalOpen:"recargaModalOpen",iframeWrapperConfig:"iframeWrapperConfig"}},185:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.applyMixins=void 0,t.applyMixins=function(e,t){t.forEach((t=>{Object.getOwnPropertyNames(t.prototype).forEach((o=>{Object.defineProperty(e.prototype,o,Object.getOwnPropertyDescriptor(t.prototype,o))}))}))}}},t={};function o(s){var n=t[s];if(void 0!==n)return n.exports;var a=t[s]={exports:{}};return e[s](a,a.exports,o),a.exports}var s={};return(()=>{const e=o(921),t=o(185);class s{constructor(){window.addEventListener("message",(e=>this.receiveMessage(e)))}setIframe(e){this.iframe=e}setNotificationCallback(e){this.notificationCallback=e}sendMessageToIframe(e){this.iframe.contentWindow.postMessage(e,"*")}sendMessageToTopAncestor(e){window.top.postMessage(e,"*")}sendMessageToParent(e){window.parent.postMessage(e,"*")}receiveMessage(t){e.events[t.data.event]&&this.notificationCallback&&this.notificationCallback(t.data)}getEvents(){return e.events}}(0,t.applyMixins)(class extends s{},[])})(),s.default})()));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2RrLWZpbGUuanMiLCJtYXBwaW5ncyI6IkNBQUEsU0FBMkNBLEVBQU1DLEdBQzFCLGlCQUFaQyxTQUEwQyxpQkFBWEMsT0FDeENBLE9BQU9ELFFBQVVELElBQ1EsbUJBQVhHLFFBQXlCQSxPQUFPQyxJQUM5Q0QsT0FBTyxHQUFJSCxHQUNlLGlCQUFaQyxRQUNkQSxRQUFRLDBCQUE0QkQsSUFFcENELEVBQUssMEJBQTRCQyxHQUNsQyxDQVRELENBU0dLLE1BQU0sSSxzQ0NSVEMsT0FBT0MsZUFBZU4sRUFBUyxhQUFjLENBQUVPLE9BQU8sSUFDdERQLEVBQVFRLFlBQVMsRUFPakJSLEVBQVFRLE9BTk8sQ0FDWEMsZUFBZ0IsaUJBQ2hCQyxhQUFjLGVBQ2RDLGlCQUFrQixtQkFDbEJDLG9CQUFxQixzQixjQ056QlAsT0FBT0MsZUFBZU4sRUFBUyxhQUFjLENBQUVPLE9BQU8sSUFDdERQLEVBQVFhLGlCQUFjLEVBUXRCYixFQUFRYSxZQVBSLFNBQXFCQyxFQUFhQyxHQUM5QkEsRUFBVUMsU0FBU0MsSUFDZlosT0FBT2Esb0JBQW9CRCxFQUFTRSxXQUFXSCxTQUFTSSxJQUNwRGYsT0FBT0MsZUFBZVEsRUFBWUssVUFBV0MsRUFBTWYsT0FBT2dCLHlCQUF5QkosRUFBU0UsVUFBV0MsR0FBTSxHQUMvRyxHQUVWLEMsR0NSSUUsRUFBMkIsQ0FBQyxFQUdoQyxTQUFTQyxFQUFvQkMsR0FFNUIsSUFBSUMsRUFBZUgsRUFBeUJFLEdBQzVDLFFBQXFCRSxJQUFqQkQsRUFDSCxPQUFPQSxFQUFhekIsUUFHckIsSUFBSUMsRUFBU3FCLEVBQXlCRSxHQUFZLENBR2pEeEIsUUFBUyxDQUFDLEdBT1gsT0FIQTJCLEVBQW9CSCxHQUFVdkIsRUFBUUEsRUFBT0QsUUFBU3VCLEdBRy9DdEIsRUFBT0QsT0FDZixDLHFCQ25CQSxNQUFNNEIsRUFBYyxFQUFRLEtBRXRCQyxFQUFVLEVBQVEsS0FDeEIsTUFBTUMsRUFDRixXQUFBQyxHQUVJQyxPQUFPQyxpQkFEZSxXQUNrQkMsR0FBU0MsS0FBS0MsZUFBZUYsSUFDekUsQ0FDQSxTQUFBRyxDQUFVQyxHQUNOSCxLQUFLRyxPQUFTQSxDQUNsQixDQUNBLHVCQUFBQyxDQUF3QkMsR0FDcEJMLEtBQUtNLHFCQUF1QkQsQ0FDaEMsQ0FDQSxtQkFBQUUsQ0FBb0JDLEdBQ2hCUixLQUFLRyxPQUFPTSxjQUFjQyxZQUFZRixFQUFTLElBQ25ELENBQ0Esd0JBQUFHLENBQXlCSCxHQUNyQlgsT0FBT2UsSUFBSUYsWUFBWUYsRUFBUyxJQUNwQyxDQUNBLG1CQUFBSyxDQUFvQkwsR0FDaEJYLE9BQU9pQixPQUFPSixZQUFZRixFQUFTLElBQ3ZDLENBQ0EsY0FBQVAsQ0FBZWMsR0FDUHRCLEVBQVlwQixPQUFPMEMsRUFBTWhCLEtBQUtnQixRQUMxQmYsS0FBS00sc0JBQ0xOLEtBQUtNLHFCQUFxQlMsRUFBTWhCLEtBRzVDLENBQ0EsU0FBQWlCLEdBQ0ksT0FBT3ZCLEVBQVlwQixNQUN2QixHQUtKLEVBQUlxQixFQUFRaEIsYUFIWixjQUFvQmlCLElBR1ksRyIsInNvdXJjZXMiOlsid2VicGFjazovL25hbWUtb2YtdGhlLW1haW4tY2xhc3Mvd2VicGFjay91bml2ZXJzYWxNb2R1bGVEZWZpbml0aW9uIiwid2VicGFjazovL25hbWUtb2YtdGhlLW1haW4tY2xhc3MvLi9zcmMvY29uc3RhbnRzLnRzIiwid2VicGFjazovL25hbWUtb2YtdGhlLW1haW4tY2xhc3MvLi9zcmMvdXRpbHMudHMiLCJ3ZWJwYWNrOi8vbmFtZS1vZi10aGUtbWFpbi1jbGFzcy93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9uYW1lLW9mLXRoZS1tYWluLWNsYXNzLy4vc3JjL2luZGV4LnRzIl0sInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiB3ZWJwYWNrVW5pdmVyc2FsTW9kdWxlRGVmaW5pdGlvbihyb290LCBmYWN0b3J5KSB7XG5cdGlmKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgbW9kdWxlID09PSAnb2JqZWN0Jylcblx0XHRtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkoKTtcblx0ZWxzZSBpZih0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpXG5cdFx0ZGVmaW5lKFtdLCBmYWN0b3J5KTtcblx0ZWxzZSBpZih0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcpXG5cdFx0ZXhwb3J0c1tcIm5hbWUtb2YtdGhlLW1haW4tY2xhc3NcIl0gPSBmYWN0b3J5KCk7XG5cdGVsc2Vcblx0XHRyb290W1wibmFtZS1vZi10aGUtbWFpbi1jbGFzc1wiXSA9IGZhY3RvcnkoKTtcbn0pKHNlbGYsICgpID0+IHtcbnJldHVybiAiLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZXZlbnRzID0gdm9pZCAwO1xuY29uc3QgZXZlbnRzID0ge1xuICAgIGxvZ2luTW9kYWxPcGVuOiBcImxvZ2luTW9kYWxPcGVuXCIsXG4gICAgbG9naW5TdWNjZXNzOiBcImxvZ2luU3VjY2Vzc1wiLFxuICAgIHJlY2FyZ2FNb2RhbE9wZW46IFwicmVjYXJnYU1vZGFsT3BlblwiLFxuICAgIGlmcmFtZVdyYXBwZXJDb25maWc6IFwiaWZyYW1lV3JhcHBlckNvbmZpZ1wiLFxufTtcbmV4cG9ydHMuZXZlbnRzID0gZXZlbnRzO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmFwcGx5TWl4aW5zID0gdm9pZCAwO1xuZnVuY3Rpb24gYXBwbHlNaXhpbnMoZGVyaXZlZEN0b3IsIGJhc2VDdG9ycykge1xuICAgIGJhc2VDdG9ycy5mb3JFYWNoKChiYXNlQ3RvcikgPT4ge1xuICAgICAgICBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhiYXNlQ3Rvci5wcm90b3R5cGUpLmZvckVhY2goKG5hbWUpID0+IHtcbiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShkZXJpdmVkQ3Rvci5wcm90b3R5cGUsIG5hbWUsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoYmFzZUN0b3IucHJvdG90eXBlLCBuYW1lKSk7XG4gICAgICAgIH0pO1xuICAgIH0pO1xufVxuZXhwb3J0cy5hcHBseU1peGlucyA9IGFwcGx5TWl4aW5zO1xuIiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHQvLyBubyBtb2R1bGUuaWQgbmVlZGVkXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5ldmVudHMgPSBleHBvcnRzLkF0c2RrID0gdm9pZCAwO1xuY29uc3QgY29uc3RhbnRzXzEgPSByZXF1aXJlKFwiLi9jb25zdGFudHNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJldmVudHNcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGNvbnN0YW50c18xLmV2ZW50czsgfSB9KTtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiLi91dGlsc1wiKTtcbmNsYXNzIEF0c2RrQmFzZSB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIGNvbnN0IGV2ZW50TGlzdGVuZXIgPSBcIm1lc3NhZ2VcIjtcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoZXZlbnRMaXN0ZW5lciwgKGRhdGEpID0+IHRoaXMucmVjZWl2ZU1lc3NhZ2UoZGF0YSkpO1xuICAgIH1cbiAgICBzZXRJZnJhbWUoaWZyYW1lKSB7XG4gICAgICAgIHRoaXMuaWZyYW1lID0gaWZyYW1lO1xuICAgIH1cbiAgICBzZXROb3RpZmljYXRpb25DYWxsYmFjayhub3RpZmljYXRpb24pIHtcbiAgICAgICAgdGhpcy5ub3RpZmljYXRpb25DYWxsYmFjayA9IG5vdGlmaWNhdGlvbjtcbiAgICB9XG4gICAgc2VuZE1lc3NhZ2VUb0lmcmFtZShtZXNzYWdlKSB7XG4gICAgICAgIHRoaXMuaWZyYW1lLmNvbnRlbnRXaW5kb3cucG9zdE1lc3NhZ2UobWVzc2FnZSwgXCIqXCIpO1xuICAgIH1cbiAgICBzZW5kTWVzc2FnZVRvVG9wQW5jZXN0b3IobWVzc2FnZSkge1xuICAgICAgICB3aW5kb3cudG9wLnBvc3RNZXNzYWdlKG1lc3NhZ2UsIFwiKlwiKTtcbiAgICB9XG4gICAgc2VuZE1lc3NhZ2VUb1BhcmVudChtZXNzYWdlKSB7XG4gICAgICAgIHdpbmRvdy5wYXJlbnQucG9zdE1lc3NhZ2UobWVzc2FnZSwgXCIqXCIpO1xuICAgIH1cbiAgICByZWNlaXZlTWVzc2FnZShldmVudCkge1xuICAgICAgICBpZiAoY29uc3RhbnRzXzEuZXZlbnRzW2V2ZW50LmRhdGEuZXZlbnRdKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5ub3RpZmljYXRpb25DYWxsYmFjaykge1xuICAgICAgICAgICAgICAgIHRoaXMubm90aWZpY2F0aW9uQ2FsbGJhY2soZXZlbnQuZGF0YSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgZ2V0RXZlbnRzKCkge1xuICAgICAgICByZXR1cm4gY29uc3RhbnRzXzEuZXZlbnRzO1xuICAgIH1cbn1cbmNsYXNzIEF0c2RrIGV4dGVuZHMgQXRzZGtCYXNlIHtcbn1cbmV4cG9ydHMuQXRzZGsgPSBBdHNkaztcbigwLCB1dGlsc18xLmFwcGx5TWl4aW5zKShBdHNkaywgW10pO1xuIl0sIm5hbWVzIjpbInJvb3QiLCJmYWN0b3J5IiwiZXhwb3J0cyIsIm1vZHVsZSIsImRlZmluZSIsImFtZCIsInNlbGYiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsInZhbHVlIiwiZXZlbnRzIiwibG9naW5Nb2RhbE9wZW4iLCJsb2dpblN1Y2Nlc3MiLCJyZWNhcmdhTW9kYWxPcGVuIiwiaWZyYW1lV3JhcHBlckNvbmZpZyIsImFwcGx5TWl4aW5zIiwiZGVyaXZlZEN0b3IiLCJiYXNlQ3RvcnMiLCJmb3JFYWNoIiwiYmFzZUN0b3IiLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwicHJvdG90eXBlIiwibmFtZSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsInVuZGVmaW5lZCIsIl9fd2VicGFja19tb2R1bGVzX18iLCJjb25zdGFudHNfMSIsInV0aWxzXzEiLCJBdHNka0Jhc2UiLCJjb25zdHJ1Y3RvciIsIndpbmRvdyIsImFkZEV2ZW50TGlzdGVuZXIiLCJkYXRhIiwidGhpcyIsInJlY2VpdmVNZXNzYWdlIiwic2V0SWZyYW1lIiwiaWZyYW1lIiwic2V0Tm90aWZpY2F0aW9uQ2FsbGJhY2siLCJub3RpZmljYXRpb24iLCJub3RpZmljYXRpb25DYWxsYmFjayIsInNlbmRNZXNzYWdlVG9JZnJhbWUiLCJtZXNzYWdlIiwiY29udGVudFdpbmRvdyIsInBvc3RNZXNzYWdlIiwic2VuZE1lc3NhZ2VUb1RvcEFuY2VzdG9yIiwidG9wIiwic2VuZE1lc3NhZ2VUb1BhcmVudCIsInBhcmVudCIsImV2ZW50IiwiZ2V0RXZlbnRzIl0sInNvdXJjZVJvb3QiOiIifQ==